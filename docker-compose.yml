#adapted from https://github.com/nextcloud/docker

version: '3'

services:

  db:
    container_name: ${MYSQL_CONTAINER|nextcloud-mariadb}
    image: ${MYSQL_IMAGE|mariadb}
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: unless-stopped
    volumes:
      - ${DIR_DATA_MARIADB|./data/mariadb}/db:/var/lib/mysql
      - ${DIR_DATA_MARIADB|./data/mariadb}/etc:/etc/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD|randomPassword}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD|randomPassword}
      - MYSQL_DATABASE=${MYSQL_DATABASE|nextcloud}
      - MYSQL_USER=${MYSQL_USER|nextcloud}

  db_backup:
    container_name: ${DB_BACKUP_CONTAINER|nextcloud-mariadb_backup}
    build: 
      context: ./images/db-backup
      args:
        - CRON_CMD=${DB_BACKUP_CRON_CMD|0 5 * * *}
    restart: unless-stopped
    depends_on:
      - db
    environment:
      - DB_BACKUP_HOST=${MYSQL_CONTAINER|nextcloud-mariadb}
      - DB_BACKUP_PASSWORD=${MYSQL_ROOT_PASSWORD|randomPassword}
      - DB_BACKUP_NAME=${MYSQL_DATABASE|nextcloud}
    volumes:
      - ${DIR_DATA_BACKUP|./data/backup}:/backup

  app:
    container_name: ${NEXTCLOUD_CONTAINER|nextcloud-app}
    image: nextcloud
    depends_on:
      - db
    restart: unless-stopped
    ports:
      - ${PORT_HTTP|9080}:80
      - ${PORT_HTTPS|9443}:443
    volumes:
      - ${DIR_DATA_NEXTCLOUD|./data/app}/apps:/var/www/html/apps
      - ${DIR_DATA_NEXTCLOUD|./data/app}/config:/var/www/html/config
      - ${DIR_DATA_NEXTCLOUD|./data/app}/data:/var/www/html/data
    environment:
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER|nextcloud}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD|nextcloud}
      - NEXTCLOUD_DATA_DIR=${NEXTCLOUD_DATA_DIR|/var/www/html/data}
      - NEXTCLOUD_TABLE_PREFIX=${NEXTCLOUD_TABLE_PREFIX|}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_TRUSTED_DOMAINS|}
      - NEXTCLOUD_UPDATE=${NEXTCLOUD_TRUSTED_DOMAINS|0}
      - SMTP_HOST=${SMTP_HOST|}
      - SMTP_SECURE=${SMTP_SECURE|}
      - SMTP_PORT=${SMTP_PORT|465}
      - SMTP_AUTHTYPE=${SMTP_AUTHTYPE|LOGIN}
      - SMTP_NAME=${SMTP_NAME|}
      - SMTP_PASSWORD=${SMTP_PASSWORD|}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS|}
      - MAIL_DOMAIN=${MAIL_DOMAIN|}
      - APACHE_DISABLE_REWRITE_IP=${APACHE_DISABLE_REWRITE_IP|}
      - TRUSTED_PROXIES=${TRUSTED_PROXIES|}
      - OVERWRITEHOST=${OVERWRITEHOST|}
      - OVERWRITEPROTOCOL=${OVERWRITEPROTOCOL|}
      - OVERWRITEWEBROOT=${OVERWRITEWEBROOT|}
      - OVERWRITECONDADDR=${OVERWRITECONDADDR|}
    entrypoint: |
      bash -c 'bash -s <<EOF
        trap "break;exit" SIGHUP SIGINT SIGTERM
        while [ ! -f /var/www/html/config/config.php ]; do
          sleep 1
        done
        while true; do
          echo "Running cronâ€¦"
          php -f /var/www/html/cron.php
          echo "Done."
          sleep 15m
        done
      EOF'
    networks:
      - proxy-tier
      - default
 
#https://github.com/nextcloud/docker/blob/master/.examples/docker-compose/with-nginx-proxy/mariadb/apache/docker-compose.yml     
#  proxy:
#    build: ./proxy
#    restart: always
#    ports:
#      - 80:80
#      - 443:443
#    labels:
#      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
#    volumes:
#      - certs:/etc/nginx/certs:ro
#      - vhost.d:/etc/nginx/vhost.d
#      - html:/usr/share/nginx/html
#      - /var/run/docker.sock:/tmp/docker.sock:ro
#    networks:
#      - proxy-tier
#
#  letsencrypt-companion:
#    image: jrcs/letsencrypt-nginx-proxy-companion
#    restart: always
#    volumes:
#      - certs:/etc/nginx/certs
#      - vhost.d:/etc/nginx/vhost.d
#      - html:/usr/share/nginx/html
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#    networks:
#      - proxy-tier
#    depends_on:
#      - proxy
#volumes:
#  db:
#  nextcloud:
#  certs:
#  vhost.d:
#  html:
#networks:
#  proxy-tier:


# Idea -> proxy + letsencrypt: https://github.com/nextcloud/docker/blob/master/.examples/docker-compose/with-nginx-proxy/mariadb/apache/docker-compose.yml
# Idea -> smtp container: https://github.com/namshi/docker-smtp/blob/master/docker-compose.yml
# Idea -> cron for nextcloud: https://help.nextcloud.com/t/docker-cron-include-cron-through-docker-compose-file/46126





#https://github.com/nextcloud/news-updater

  news-updater:
    container_name: ${NEXTCLOUD_UPDATER_CONTAINER|nextcloud-news_updater}
    build: ${NEXTCLOUD_UPDATER_IMAGE|./images/updater_arm}
    depends_on:
      - app
    restart: unless-stopped
    environment:
      - NEWS_PASSWORD=${NEXTCLOUD_UPDATER_PWD|GenerateNewPassword}
