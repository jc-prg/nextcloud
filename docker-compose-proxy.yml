#---------------------------------------------
# nextcloud configuration with proxy & letsencrypt / IN PROGESS !!!
#---------------------------------------------
# $ cp sample.env .env  # create configuration
# $ ./gen-password      # create strong password
# $ nano .env           # edit config vars
#---------------------------------------------
# adapted from https://github.com/nextcloud/docker
#---------------------------------------------
#
#  IN PROGRESS ...
#
#---------------------------------------------

version: '3'

services:

  db:
    container_name: ${MYSQL_CONTAINER:-nextcloud-mariadb}
    build: ${MYSQL_IMAGE:-./images/mariadb}
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: unless-stopped
    volumes:
      - ${DIR_DATA_MARIADB:-./data/mariadb}/db:/var/lib/mysql
      - ${DIR_DATA_MARIADB:-./data/mariadb}/etc:/etc/mysql
      - ${DIR_DATA_MARIADB:-./data/mariadb}/init:/database-init
      - ${DIR_DATA_MARIADB:-./data/mariadb}/init:/docker-entry-initdb
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE:-nextcloud}
      - MYSQL_USER=${MYSQL_USER:-nextcloud}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-randomPassword}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-randomPassword}


  db_backup:
    container_name: ${DB_BACKUP_CONTAINER:-nextcloud-mariadb-backup}
    build: 
      context: ${DB_BACKUP_IMAGE:-./images/db-backup}
      args:
        - CRON_CMD=${DB_BACKUP_CRON_CMD:-0 5 * * 0}
    restart: unless-stopped
    depends_on:
      - db
    environment:
      - DB_BACKUP_HOST=${MYSQL_CONTAINER:-nextcloud-mariadb}
      - DB_BACKUP_NAME=${MYSQL_DATABASE:-nextcloud}
      - DB_BACKUP_PASSWORD=${MYSQL_ROOT_PASSWORD:-randomPassword}
      - DB_BACKUP_DATABASE=${MYSQL_DATABASE:-nextcloud}
    volumes:
      - ${DIR_DATA_BACKUP:-./data/backup}:/backup
      - ${DIR_DATA_MARIADB:-./data/mariadb}/init:/backup-latest


  app:
    container_name: ${NEXTCLOUD_CONTAINER:-nextcloud-app}
    build: 
      context: ${NEXTCLOUD_IMAGE:-./images/nextcloud}
    depends_on:
      - db
    restart: unless-stopped
    ports:
      - ${PORT_HTTP:-9080}:80
      - ${PORT_HTTPS:-9443}:443
    volumes:
#      - nextcloud:/var/www/html
      - ${DIR_CONFIG_NEXTCLOUD:-./data/nextcloud}/config:/var/www/html/config
      - ${DIR_DATA_NEXTCLOUD:-./data/nextcloud}/apps:/var/www/html/apps
      - ${DIR_DATA_NEXTCLOUD:-./data/nextcloud}/data:/var/www/html/data
    environment:
#      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER:-nextcloud}
#      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD:-nextcloud}
      - NEXTCLOUD_DATA_DIR=${NEXTCLOUD_DATA_DIR:-/var/www/html/data}
      - NEXTCLOUD_TABLE_PREFIX=${NEXTCLOUD_TABLE_PREFIX:-}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_TRUSTED_DOMAINS:-}
      - NEXTCLOUD_UPDATE=${NEXTCLOUD_UPDATE:-0}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-nextcloud}
      - MYSQL_USER=${MYSQL_USER:-nextcloud}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-randomPassword}
      - MYSQL_HOST=${MYSQL_CONTAINER:-nextcloud-mariadb}
      - SMTP_HOST=${SMTP_HOST:-}
      - SMTP_SECURE=${SMTP_SECURE:-}
      - SMTP_PORT=${SMTP_PORT:-465}
      - SMTP_AUTHTYPE=${SMTP_AUTHTYPE:-LOGIN}
      - SMTP_NAME=${SMTP_NAME:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS:-}
      - MAIL_DOMAIN=${MAIL_DOMAIN:-}
      - APACHE_DISABLE_REWRITE_IP=${APACHE_DISABLE_REWRITE_IP:-}
      - TRUSTED_PROXIES=${TRUSTED_PROXIES:-}
      - OVERWRITEHOST=${OVERWRITEHOST:-}
      - OVERWRITEPROTOCOL=${OVERWRITEPROTOCOL:-}
      - OVERWRITEWEBROOT=${OVERWRITEWEBROOT:-}
      - OVERWRITECONDADDR=${OVERWRITECONDADDR:-}
    networks:
      - proxy-tier
      - default
 
#https://github.com/nextcloud/docker/blob/master/.examples/docker-compose/with-nginx-proxy/mariadb/apache/docker-compose.yml     

  proxy:
    container_name: ${PROXY_CONTAINER:-nextcloud-proxy}
    build: ${PROXY_IMAGE:-./images/proxy}
    restart: always
    ports:
      - 80:80
      - 443:443
#    labels:
#      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
#      - ./data/nginx/config/nginx.conf:/etc/nginx/nginx.conf
#      - ./data/nginx/config-domains:/etc/nginx/conf.d
    networks:
      - proxy-tier


#  letsencrypt-companion:
#    container_name: nextcloud-letsencrypt
#    image: jrcs/letsencrypt-nginx-proxy-companion
#    restart: always
#    volumes:
#      - certs:/etc/nginx/certs
#      - vhost.d:/etc/nginx/vhost.d
#      - html:/usr/share/nginx/html
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#    networks:
#      - proxy-tier
#    depends_on:
#      - proxy

volumes:
  nextcloud:
  certs:
  vhost.d:
  html:

networks:
  proxy-tier:


# Idea -> proxy + letsencrypt: https://github.com/nextcloud/docker/blob/master/.examples/docker-compose/with-nginx-proxy/mariadb/apache/docker-compose.yml
# Idea -> smtp container: https://github.com/namshi/docker-smtp/blob/master/docker-compose.yml
# Idea -> cron for nextcloud: https://help.nextcloud.com/t/docker-cron-include-cron-through-docker-compose-file/46126


#https://github.com/nextcloud/news-updater

#  news-updater:
#    container_name: ${NEXTCLOUD_UPDATER_CONTAINER}
#    build: ${NEXTCLOUD_UPDATER_IMAGE:-./images/updater}
#    depends_on:
#      - app
#    restart: unless-stopped
#    environment:
#      - NEWS_PASSWORD=${NEXTCLOUD_UPDATER_PWD:-GenerateNewPassword}
